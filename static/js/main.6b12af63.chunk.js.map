{"version":3,"sources":["api/api.js","redux/auth-reducer.js","redux/users-reducer.js","redux/app-reducer.js","redux/redux-store.js","reportWebVitals.js","components/NavBar/NavBar.js","components/hoc/withSuspense.js","components/Users/User/User.js","components/Paginator/Paginator.js","components/Users/Users.js","redux/user-selectors.js","components/Users/UsersContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/login.js","App.js","index.js","assets/preloader.svg","components/Preloader/Preloader.js","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","id","post","unfollowUser","delete","profielAPI","getProfile","getStatus","updateStatus","status","put","authAPI","setAuthUser","login","email","password","rememberMe","logout","SET_USER_DATA","initialState","userId","isAuth","setAuthUserData","type","authUserThunk","dispatch","a","resultCode","authReducer","state","action","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","users","totalUsers","isFetching","followInProgress","follow","unfollow","setUsers","toggleIsFetching","toggleIsFollowing","usersReducer","map","u","followed","filter","INITIALIZED_SUCCESS","initialize","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","auth","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","to","withSuspense","Component","props","Suspense","fallback","User","src","disabled","some","onClick","unfollowThunk","followThunk","name","city","country","Paginator","pageCount","Math","ceil","pages","i","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","onSetPage","Users","Preloader","photos","small","createSelector","getPageSize","getTotalUsers","getCurrentPage","getIsFetching","getFollowInProgress","UsersContainer","page","setCurrentPageThunk","nextProps","nextState","this","getUsersThunk","React","connect","items","totalCount","Header","HeaderContainer","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","error","message","messages","length","stopSubmit","_error","formData","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","compose","withRouter","promise","Promise","all","MainApp","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe","PreloaderSrc","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","posts","msg","likes","img","postText","profile","addPost","newPost","setStatus","setUserProfileThunk","getStatusThunk","updateStatusThunk","ADD_MESSAGE","dialogs","dialog","addMessage","newMessage"],"mappings":"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","file":"static/js/main.6b12af63.chunk.js","sourcesContent":["import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"869a0d16-5e83-4767-81e8-4a1edcf41cca\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n}\r\n\r\nexport const profielAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/` + id).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    getStatus(id) {\r\n        return instance.get('profile/status/' + id).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    setAuthUser() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n}\r\n    ","import {authAPI} from \"../api/api\"\r\nimport {stopSubmit} from \"redux-form\"\r\nconst SET_USER_DATA = \"auth/SET-USER-DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nexport const authUserThunk = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.setAuthUser();\r\n        if(data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.login(email, password, rememberMe);\r\n        if(data.resultCode === 0) {\r\n            dispatch(authUserThunk());\r\n        } else {\r\n            let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"Login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.logout();\r\n        if(data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {usersAPI} from \"../api/api\"\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET-USERS\"\r\nconst SET_CURRENT_PAGE = \"users/SET-CURRENT-PAGE\"\r\nconst SET_TOTAL_COUNT = \"users/SET-TOTAL-COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE-IS-FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING = \"users/TOGGLE-IS-FOLLOWING\"\r\n\r\nlet initialState = {\r\n    // users: [\r\n    //     {id: 1, followed: true, fullName: \"Dmitry\", position: \"Businessman\", city: \"Kiev\", country: \"Ukraine\", img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"},\r\n    //     {id: 2, followed: true, fullName: \"Dan\", position: \"Employe\", city: \"Los Angeles\", country: \"USA\", img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"},\r\n    //     {id: 3, followed: false, fullName: \"Jane\", position: \"Self-Employe\", city: \"New York\", country: \"USA\", img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"},\r\n    // ],\r\n    users: [],\r\n    pageSize: 4,\r\n    totalUsers: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        case TOGGLE_IS_FETCHING: \r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING: \r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching ? [...state.followInProgress, action.userId] : state.followInProgress.filter(id => id!= action.userId),\r\n                // isFetching: action.isFetching - ���������� �������� ��� ���\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return {\r\n      type: FOLLOW,\r\n      userId\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return {\r\n      type: UNFOLLOW,\r\n      userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n      type: SET_USERS,\r\n      users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n      type: SET_CURRENT_PAGE,\r\n      currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsers = (totalUsers) => {\r\n    return {\r\n      type: SET_TOTAL_COUNT,\r\n      totalUsers: totalUsers\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\n\r\nexport const toggleIsFollowing = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsers(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const setCurrentPageThunk = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const followThunk = (userId) => {\r\n    return async(dispatch) => {\r\n        dispatch(toggleIsFollowing(true, userId));\r\n        let data = await usersAPI.followUser(userId);\r\n        if(data.resultCode === 0) {\r\n            dispatch(follow(userId));\r\n        }\r\n        dispatch(toggleIsFollowing(false, userId));\r\n        \r\n    }\r\n}\r\n\r\nexport const unfollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowing(true, userId));\r\n        let data = await usersAPI.unfollowUser(userId);\r\n        if(data.resultCode === 0) {\r\n            dispatch(unfollow(userId));\r\n        }\r\n        dispatch(toggleIsFollowing(false, userId));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authUserThunk } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialize: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialize: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n      type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authUserThunk());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport appReducer from './app-reducer'\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div>\r\n        <NavLink to=\"/profile\" className=\"navBar__link\">Profile</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/dialogs\" className=\"navBar__link\">Dialogs</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/users\" className=\"navBar__link\">Users</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/news\" className=\"navBar__link\">News</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/settings\" className=\"navBar__link\">Settings</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading..</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport './User.css'\r\n\r\nconst User = (props) => {\r\n    let toggleFollow = (status, id) => {\r\n        if(status===true) {\r\n            props.unfollowThunk(id)\r\n        }\r\n        else {\r\n            props.followThunk(id)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='user'>\r\n                <div className='user__logo'>\r\n                    <NavLink to={\"/profile/\" + props.id}>\r\n                        <div>\r\n                            <img src={props.src != null ? props.src : \"https://e7.pngegg.com/pngimages/409/621/png-clipart-computer-icons-avatar-male-user-profile-others-logo-monochrome.png\"}></img>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div>\r\n                        <button disabled={props.followInProgress.some(id => id === props.id)} onClick={() => {toggleFollow(props.followed, props.id)}}>{props.followed ? \"Follow\" : \"Unfollow\"}</button>\r\n                    </div>\r\n                </div>\r\n                <div className='user__info'>\r\n                    <div className='user__info-item'>\r\n                        <p>{props.name}</p>\r\n                        <p>{props.status != null ? props.status : \"I'm employe\"}</p>\r\n                    </div>\r\n                    <div className='user__info-item'>\r\n                        <p>{props.city != null ? props.city : \"Los Angeles\"}</p>\r\n                        <p>{props.country != null ? props.country : \"USA\"}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n\r\n","import React, { useState } from 'react'\r\nimport './Paginator.css'\r\n\r\nexport const Paginator = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages[i] = i;\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber >= 1 && <button onClick={ () => {setPortionNumber(portionNumber-1)}} disabled={portionNumber === 1 ? true : false}>PREV</button>}\r\n            {pages\r\n                .filter(p => p>= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={props.currentPage===p && \"selected-page\"} onClick={() => {props.onSetPage(p)}}>{p}</span>    \r\n\r\n                })\r\n            }\r\n            {portionCount >= portionNumber && <button onClick={ () => {setPortionNumber(portionNumber+1)}} disabled={portionCount === portionNumber ? true : false}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport User from \"./User/User\"\r\nimport Preloader from '../Preloader/Preloader';\r\nimport \"./Users.css\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div className=\"users-content\">\r\n            {props.isFetching ? <Preloader /> : null}\r\n            <Paginator totalUsers={props.totalUsers} pageSize={props.pageSize} currentPage={props.currentPage} onSetPage={props.onSetPage} portionSize = {10}/>\r\n            <div className=\"users\">\r\n                {props.users.map((u) => (<User src={u.photos.small} followed={u.followed} name={u.name} status={u.status} city={u.city} country={u.country} id={u.id} followInProgress={props.followInProgress} followThunk={props.followThunk} unfollowThunk={props.unfollowThunk}/>))};\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from 'reselect'\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsers = (state) => {\r\n    return state.usersPage.totalUsers\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowInProgress = (state) => {\r\n    return state.usersPage.followInProgress\r\n}\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { setUsers, getUsersThunk, setCurrentPageThunk, followThunk, unfollowThunk } from \"../../redux/users-reducer\";\r\nimport Users from './Users'\r\nimport {getCurrentPage, getFollowInProgress, getIsFetching, getPageSize, getTotalUsers, getUsers} from '../../redux/user-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    onSetPage = (page) => {\r\n        this.props.setCurrentPageThunk(page, this.props.pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n                <Users totalUsers={this.props.totalUsers} \r\n                    pageSize={this.props.pageSize} \r\n                    currentPage={this.props.currentPage} \r\n                    onSetPage={this.onSetPage} \r\n                    users={this.props.users} \r\n                    isFetching={this.props.isFetching}\r\n                    followInProgress={this.props.followInProgress}\r\n                    followThunk={this.props.followThunk}\r\n                    unfollowThunk={this.props.unfollowThunk}\r\n                    />\r\n                    \r\n            </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsers: getTotalUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unFollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setTotalUsers: (totalUsers) => {\r\n//             dispatch(setTotalUsersAC(totalUsers))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {setUsers, getUsersThunk, setCurrentPageThunk, followThunk, unfollowThunk})(UsersContainer)\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img className=\"header__logo-img\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8kUldOfNMU_JC_Fr7aGWlUPMsM08w-ufdKg&usqp=CAU\"></img>\r\n        <p className=\"header__logo-slogan\">New social network</p>\r\n        {props.isAuth ? <div><div>{props.login}</div><button onClick={props.logout}>Logout</button></div> : <NavLink className=\"header__logo-link\" to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header';\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../FormControls/FormControls.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='email' name='email' component='input' />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='password' name='password' component='input' type='password' />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name='rememberMe' component='input'/>Remember me\r\n            </div>\r\n            {props.error && <div className='text-error'>{props.error}</div>} \r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nconst ReduxLoginForm = reduxForm ({form: 'Login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if(props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport {withSuspense} from \"./components/hoc/withSuspense\"\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/login\";\nimport { connect, Provider } from \"react-redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport { compose } from 'redux';\nimport Preloader from \"./components/Preloader/Preloader\";\nimport {withRouter} from 'react-router-dom'\nimport store from \"./redux/redux-store\";\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if(!this.props.initialize) {\n      return <Preloader />\n    }\n    return (\n        <div>\n          <HeaderContainer />\n          <div className=\"app-wrapper\">\n            <NavBar />\n            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n            <Route\n              path=\"/profile/:userId?\"\n              render={withSuspense(ProfileContainer)}\n            />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      initialize: state.app.initialize\n  }\n}\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp}),\n)(App)\n\nconst MainApp = (props) => {\n  return <Provider store={store}>\n    <HashRouter>\n      <AppContainer />\n    </HashRouter>\n  </Provider>;\n}\n\n\nexport default MainApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport MainApp from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nlet rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <MainApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n  let state = store.getState();\n  rerenderEntireTree(state);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.9f7eabcd.svg\";","import React from 'react'\r\nimport PreloaderSrc from '../../assets/preloader.svg'\r\n\r\nlet Preloader = () => {\r\n    return <div><img src={PreloaderSrc}/></div>\r\n}\r\n\r\nexport default Preloader;","import {profielAPI} from \"../api/api\"\r\nconst ADD_POST = \"profile/ADD-POST\";\r\nconst SET_USERS_PROFILE = \"profile/SET-USERS-PROFILE\"\r\nconst SET_STATUS = \"profile/SET-STATUS\"\r\nconst DELETE_POST = \"profile/DELETE-POST\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, msg: \"Hi!\", likes: 15, img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"},\r\n        {id: 2, msg: \"Hello!\", likes: 7, img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"}\r\n    ],\r\n    postText: '',\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                msg: action.newPost,\r\n                likes: 10,\r\n                img: \"https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\", \r\n            };\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        } \r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPost) => {\r\n    return {\r\n      type: ADD_POST,\r\n      newPost\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n      type: DELETE_POST,\r\n      id\r\n    }\r\n}\r\n\r\nexport const setUsersProfile = (profile) => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const setUserProfileThunk = (id) => {\r\n    return async (dispatch) => {\r\n        let data = await profielAPI.getProfile(id);\r\n        dispatch(setUsersProfile(data));\r\n    }\r\n}\r\n\r\nexport const getStatusThunk = (id) => {\r\n    return async (dispatch) => {\r\n        let data = await profielAPI.getStatus(id);\r\n        dispatch(setStatus(data));\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return async (dispatch) => {\r\n        let data = await profielAPI.updateStatus(status);\r\n        if(data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = \"dialogs/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {dialog: \"Dan\", id: 1},\r\n        {dialog: \"Kate\", id: 2},\r\n        {dialog: \"John\", id: 3},\r\n        {dialog: \"Sam\", id: 4},\r\n        {dialog: \"Mathew\", id: 5},\r\n    ],\r\n    messages: [\r\n        {message:\"Hi\", id: 1},\r\n        {message:\"Hello\", id: 2},\r\n        {message:\"How are you\", id: 3},\r\n        {message:\"What's up?\", id: 4},\r\n        {message:\"Yoo Yoo\", id: 5}\r\n    ],\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 10, message: action.newMessage}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (newMessage) => {\r\n    return {\r\n      type: ADD_MESSAGE,\r\n      newMessage\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}