{"version":3,"sources":["components/hoc/withAuthRedirect.js","validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormControls/FormControls.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","requiredField","value","maxLengthCreator","maxLength","length","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Textarea","input","meta","hasError","touched","error","className","MyPost","src","img","msg","likes","maxLength10","MyPosts","memo","postsElements","profilePage","posts","map","p","AddPostFormRedux","onSubmit","values","addPost","newPost","reduxForm","form","handleSubmit","Field","placeholder","name","component","validate","MyPostsContainer","dispatch","ProfileStatus","editMode","status","toggleEditMode","setState","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","onChange","autoFocus","onBlur","onClick","ProfileInfo","profile","photos","small","fullName","aboutMe","lookingForAJobDescription","contacts","facebook","twitter","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","setUserProfileThunk","getStatusThunk","updateStatusThunk","compose","withRouter"],"mappings":"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","file":"static/js/3.c55edaed.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedRedirectComponent;\r\n}","\r\nexport const requiredField = (value) => {\r\n    if(!value) return 'Field is required, please fill it';\r\n    return undefined\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport \"./FormControls.css\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div>\r\n      <div className={\"form-control\" + \" \" + (hasError ? \"error\" : \"\")}>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n        {hasError ? <span className={\"error\"}>{meta.error}</span> : ''}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './Post.css'\r\n\r\nconst MyPost = (props) => {\r\n  let postData = [\r\n    {message: \"Hi!\", id: 1},\r\n    {message: \"Hello!\", id: 2}\r\n  ]\r\n  return (\r\n    <div className=\"post\">\r\n      <img className=\"post__photo\" src={props.img}></img>\r\n      <div className=\"post__text\">\r\n        <p className=\"post__text-msg\">{props.msg}</p>\r\n        <p className=\"post__text-likes\">Likes: {props.likes}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPost;\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport './MyPosts.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../../validators/validators';\r\nimport { Textarea } from '../../FormControls/FormControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.profilePage.posts.map( p => <Post msg={p.msg} likes={p.likes} img={p.img}/>)\r\n\r\n  let newPost = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  }\r\n  return (\r\n    <div className=\"my-posts\">\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n        {postsElements}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder='Enter your post' name='newPost' component={Textarea} validate={[requiredField, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm ({form: 'addPost'})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPost(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    toggleEditMode = (status) => {\r\n        if(status===true) {\r\n            this.setState({\r\n                editMode: false\r\n            });\r\n            this.props.updateStatus(this.state.status)\r\n        } \r\n        else {\r\n            this.setState({\r\n                editMode: true\r\n            })\r\n        }\r\n        \r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.editMode ?\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={() => {this.toggleEditMode(this.state.editMode)}} value={this.state.status}></input>\r\n                    </div> : \r\n                    <div>\r\n                        <span onClick={() => {this.toggleEditMode(this.state.editMode)}}>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusHook from './ProfileStatus'\r\nimport './ProfileInfo.css'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className=\"profile-info\">\r\n            <ProfileStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className=\"profile-info__photo\">\r\n                <img src={props.profile.photos.small}></img>\r\n            </div>\r\n            <div className=\"profile-info__text\">\r\n                <p>Full name: {props.profile.fullName}</p>\r\n                <p>About me: {props.profile.aboutMe}</p>\r\n                <p>Status: {props.profile.lookingForAJobDescription}</p>\r\n                <p>Facebook: {props.profile.contacts.facebook}</p>\r\n                <p>Twitter: {props.profile.contacts.twitter}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport './Profile.css'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className=\"profile-content\">\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom'\r\nimport Profile from './Profile';\r\nimport {setUserProfileThunk, getStatusThunk, updateStatusThunk} from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.setUserProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n    render() {\r\n        return  (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatusThunk}/>\r\n        )   \r\n    }\r\n        \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfileThunk, getStatusThunk, updateStatusThunk}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}