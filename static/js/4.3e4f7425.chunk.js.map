{"version":3,"sources":["components/hoc/withAuthRedirect.js","validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/FormControls/FormControls.js","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","requiredField","value","maxLengthCreator","maxLength","length","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Textarea","input","meta","hasError","touched","error","className","Dialog","id","user","Message","msg","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","dialog","messagesElements","messages","m","message","values","addDialog","newMessage","compose","dispatch","addMessage"],"mappings":"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","file":"static/js/4.3e4f7425.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedRedirectComponent;\r\n}","\r\nexport const requiredField = (value) => {\r\n    if(!value) return 'Field is required, please fill it';\r\n    return undefined\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport \"./FormControls.css\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div>\r\n      <div className={\"form-control\" + \" \" + (hasError ? \"error\" : \"\")}>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n        {hasError ? <span className={\"error\"}>{meta.error}</span> : ''}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport './Dialog.css'\r\n\r\nconst Dialog = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"dialog\">\r\n        <NavLink to={\"/dialogs/\" + props.id} className=\"dialog__text\">{props.user}</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport './Message.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"message\">\r\n        <p className=\"message__text\">{props.msg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport \"./Dialogs.css\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../validators/validators';\r\nimport { Textarea } from '../FormControls/FormControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map( d => <Dialog user={d.dialog} id={d.id} />);\r\n  let messagesElements = props.dialogsPage.messages.map( m => <Message msg={m.message} id={m.id} />);\r\n\r\n  let onAddDialog = (values) => {\r\n    props.addDialog(values.newMessage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dialogs-content\">\r\n      <div className=\"dialogs\">\r\n        {dialogsElements}\r\n      </div>\r\n      <div className=\"messages\">\r\n        {messagesElements}\r\n        <AddMessageFormRedux onSubmit={onAddDialog}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder='Enter your message' name='newMessage' component={Textarea} validate={[requiredField, maxLength50]} />\r\n      </div>\r\n      <div>\r\n        <button>Add Dialog</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm ({form: 'addMessage'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { addMessage } from \"../../redux/dialogs-reducer\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addDialog: (newMessage) => {\r\n            dispatch(addMessage(newMessage))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}